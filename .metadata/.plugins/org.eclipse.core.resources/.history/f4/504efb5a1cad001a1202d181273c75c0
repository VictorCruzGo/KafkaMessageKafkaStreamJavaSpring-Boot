package com.vic.kafka.app.broker.stream.promotion;

import org.apache.kafka.common.serialization.Serdes;
import org.apache.kafka.streams.StreamsBuilder;
import org.apache.kafka.streams.kstream.Consumed;
import org.apache.kafka.streams.kstream.KStream;
import org.apache.kafka.streams.kstream.Printed;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import com.fasterxml.jackson.databind.ObjectMapper;

@Configuration
public class PromotionUpperCaseJsonStream {
	
	private static final Logger LOG=LoggerFactory.getLogger(PromotionUpperCaseJsonStream.class);
	
	private ObjectMapper objectMapper=new ObjectMapper();
	
	@Bean
	public KStream<String, String> kstreamPromotionUpperCase(StreamsBuilder builder){
		KStream<String, String> sourceStream=builder.stream("t.commodity.promotion",
				Consumed.with(Serdes.String(), Serdes.String()));
		
		KStream<String, String> uppercaseStream=sourceStream.mapValues(s->s.toUpperCase());
		uppercaseStream.to("t.commodity.promotion-uppercase");
		
		//useful for debugging, but 	don't do this on production
		sourceStream.print(Printed.<String, String>toSysOut().withLabel("Original Stream"));	
		uppercaseStream.print(Printed.<String, String>toSysOut().withLabel("Uppercase Stream"));
		
		return sourceStream;
	}
}
